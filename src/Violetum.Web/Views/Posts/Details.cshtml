@using Violetum.ApplicationCore.ViewModels.Comment
@model PostPageViewModel

@{
    ViewData["Title"] = Model.Post.Title;
    var commentsCount = ((int) ViewData["TotalComments"]).ToString();
}

@{
    if (TempData["CreatePostSuccess"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["CreatePostSuccess"]
        </div>
    }

    if (TempData["EditPostSuccess"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["EditPostSuccess"]
        </div>
    }

    if (TempData["CreateCommentSuccess"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["CreateCommentSuccess"]
        </div>
    }

    if (TempData["EditCommentSuccess"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["EditCommentSuccess"]
        </div>
    }

    if (TempData["DeleteCommentSuccess"] != null)
    {
        <div class="alert alert-success" role="alert">
            @TempData["DeleteCommentSuccess"]
        </div>
    }
}

<h3>@Model.Post.Title Details</h3>
<div class="row mb-4">
    @{
        if ((ViewData["UserId"] != null) && ((string) ViewData["UserId"] == Model.Post.Author.Id))
        {
            <a asp-action="Edit" asp-route-id="@Model.Post.Id" class="btn btn-sm btn-warning mr-2">Edit</a>
        }
    }
    <a asp-action="Index" class="btn btn-sm btn-success">Back to List</a>
</div>
<div>
    <h4>Post</h4>
    <hr/>
    <dl class="row">
        <dt class="col-sm-2">
            Votes
        </dt>
        <dd class="col-sm-10">
            <div class="list-inline">
                @{
                    if (User.Claims.Any())
                    {
                        <form asp-action="VotePost" asp-controller="Posts" asp-route-postId="@Model.Post.Id" method="post" class="list-inline-item">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="PostVoteDto.Direction" value="1"/>

                            <input type="submit" value="Upvote" class="btn btn-primary"/>
                        </form>
                    }
                }
                <span class="list-inline-item">@Html.DisplayFor(model => model.Post.VoteCount)</span>
                @{
                    if (User.Claims.Any())
                    {
                        <form asp-action="VotePost" asp-controller="Posts" asp-route-postId="@Model.Post.Id" method="post" class="list-inline-item">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <input type="hidden" asp-for="PostVoteDto.Direction" value="-1"/>

                            <input type="submit" value="Downvote" class="btn btn-primary"/>
                        </form>
                    }
                }
            </div>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.Author.Username)
        </dt>
        <dd class="col-sm-10">
            <a asp-controller="Profile" asp-action="Index" asp-route-id="@Model.Post.Author.Id">
                @Html.DisplayFor(model => model.Post.Author.Username)
            </a>
        </dd>
        <dt class="col-sm-2">
            Category @Html.DisplayNameFor(model => model.Post.Category.Name)
        </dt>
        <dd class="col-sm-10">
            <a asp-controller="Category" asp-action="Details" asp-route-name="@Model.Post.Category.Name">
                @Html.DisplayFor(model => model.Post.Category.Name)
            </a>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.Content)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.Content)
        </dd>
    </dl>

    <div class="row">
        <div class="col-sm-8">
            <h5>
                <a asp-action="Create" asp-controller="Comments" asp-route-postId="@Model.Post.Id">Add Comment</a>
            </h5>

            <h3>@commentsCount Comment</h3>
            <div>
                Sort By:
                <a asp-action="Details" asp-route-commentPage="@ViewData["CurrentPageParm"]" asp-route-commentSortBy="VoteCount" asp-route-commentDir="desc">
                    Upvotes
                </a>
                <a asp-action="Details" asp-route-commentPage="@ViewData["CurrentPageParm"]" asp-route-commentSortBy="VoteCount" asp-route-commentDir="asc">
                    Downvotes
                </a>
                |
                <a asp-action="Details" asp-route-commentPage="@ViewData["CurrentPageParm"]" asp-route-commentSortBy="CreatedAt" asp-route-commentDir="asc">ASC</a>
                <a asp-action="Details" asp-route-commentPage="@ViewData["CurrentPageParm"]" asp-route-commentSortBy="CreatedAt" asp-route-commentDir="desc">DESC</a>
                CreatedAt
            </div>
            @{
                foreach (CommentViewModel comment in Model.Comments)
                {
                    <div class="card-body">
                        <div class="text-muted h7 mb-2">
                            <i class="fa fa-clock-o"></i> @comment.CreatedAt
                            @{
                                if ((ViewData["UserId"] != null) && ((string) ViewData["UserId"] == comment.Author.Id))
                                {
                                    <a asp-action="Edit" asp-controller="Comments" asp-route-id="@comment.Id" class="btn btn-sm btn-warning mr-2">
                                        Edit
                                    </a>

                                    <form asp-action="Delete" asp-controller="Comments" asp-route-id="@comment.Id" asp-route-postId="@Model.Post.Id">
                                        <input type="submit" class="btn btn-sm btn-danger" value="Delete">
                                    </form>
                                }
                                <a asp-action="Create" asp-controller="Comments" asp-route-postId="@Model.Post.Id" asp-route-parentId="@comment.Id">Reply Comment</a>
                            }
                        </div>
                        <a class="card-link" href="#">
                            <a class="card-title" asp-controller="Profile" asp-action="Index" asp-route-id="@comment.Author.Id">@comment.Author.Username</a>
                        </a>

                        <p class="card-text">
                            @{
                                if (!string.IsNullOrEmpty(comment.ParentId))
                                {
                                    <small>reply to @comment.ParentId</small>
                                    <br/>
                                }
                            }
                            @comment.Content
                            <div>
                                Votes
                                <div class="list-inline">
                                    @{
                                        if (User.Claims.Any())
                                        {
                                            <form asp-action="VoteComment" asp-controller="Comments" asp-route-commentId="@comment.Id" method="post" class="list-inline-item">
                                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                                <input type="hidden" asp-for="CommentVoteDto.Direction" value="1"/>
                                                <input type="hidden" asp-for="CommentVoteDto.PostId" value="@comment.Post.Id"/>

                                                <input type="submit" value="Upvote" class="btn btn-sm btn-primary"/>
                                            </form>
                                        }
                                    }
                                    <span class="list-inline-item">@Html.DisplayFor(model => comment.VoteCount)</span>
                                    @{
                                        if (User.Claims.Any())
                                        {
                                            <form asp-action="VoteComment" asp-controller="Comments" asp-route-commentId="@comment.Id" method="post" class="list-inline-item">
                                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                                <input type="hidden" asp-for="CommentVoteDto.Direction" value="-1"/>
                                                <input type="hidden" asp-for="CommentVoteDto.PostId" value="@comment.Post.Id"/>

                                                <input type="submit" value="Downvote" class="btn btn-sm btn-primary"/>
                                            </form>
                                        }
                                    }
                                </div>
                            </div>
                        </p>
                    </div>
                }
            }
            @{
                var currentPage = (int) ViewData["CurrentPageParm"];

                bool hasPreviousPage = currentPage > 1;
                bool hasNextPage = currentPage < (int) ViewData["totalPages"];

                string prevDisabled = !hasPreviousPage ? "disabled" : "";
                string nextDisabled = !hasNextPage ? "disabled" : "";
            }

            <a asp-action="Details"
               asp-route-commentPage="@(currentPage - 1)"
               asp-route-commentSortBy="@ViewData["SortByParm"]"
               asp-route-commentDir="@ViewData["OrderByDirParm"]"
               class="btn btn-default @prevDisabled">
                Prev Page
            </a>
            <a asp-action="Details"
               asp-route-commentPage="@(currentPage + 1)"
               asp-route-commentSortBy="@ViewData["SortByParm"]"
               asp-route-commentDir="@ViewData["OrderByDirParm"]"
               class="btn btn-default @nextDisabled">
                Next Page
            </a>
        </div>
    </div>
</div>