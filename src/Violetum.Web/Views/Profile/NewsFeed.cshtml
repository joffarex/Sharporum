@model IEnumerable<PostViewModel>

@{
    ViewData["Title"] = "NewsFeed";
    var postsCount = ((int) ViewData["TotalPosts"]).ToString();
}

<h2>@postsCount Posts in NewsFeed</h2>

<div>
    <form
        class="form-inline mb-3"
        asp-action="NewsFeed"
        method="get"
        asp-route-sortBy="@ViewData["SortByParm"]"
        asp-route-dir="@ViewData["OrderByDirParm"]">
        <div class="form-group">
            <input type="text" name="title" class="form-control">
        </div>
        <input type="submit" value="Search" class="ml-2 btn btn-primary"/>
    </form>
</div>

<table class="table">
    <thead>
    <tr>
        <th>Id</th>
        <th>Title</th>
        <th>
            <a asp-action="NewsFeed" asp-route-page="@ViewData["CurrentPageParm"]" asp-route-title="@ViewData["PostTitleParm"]" asp-route-sortBy="VoteCount" asp-route-dir="desc">
                Upvotes
            </a>
            <a asp-action="NewsFeed" asp-route-page="@ViewData["CurrentPageParm"]" asp-route-title="@ViewData["PostTitleParm"]" asp-route-sortBy="VoteCount" asp-route-dir="asc">
                Downvotes
            </a>
        </th>
        <th>Author</th>
        <th>Category</th>
        <th>
            <a asp-action="NewsFeed" asp-route-page="@ViewData["CurrentPageParm"]" asp-route-title="@ViewData["PostTitleParm"]" asp-route-sortBy="CreatedAt" asp-route-dir="asc">ASC</a>
            <a asp-action="NewsFeed" asp-route-page="@ViewData["CurrentPageParm"]" asp-route-title="@ViewData["PostTitleParm"]" asp-route-sortBy="CreatedAt" asp-route-dir="desc">DESC</a>
            CreatedAt
        </th>
        <th>UpdatedAt</th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (PostViewModel post in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => post.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => post.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => post.VoteCount)
            </td>
            <td>
                <a asp-controller="Profile" asp-action="Index" asp-route-id="@post.Author.Id">
                    @Html.DisplayFor(modelItem => post.Author.Username)
                </a>
            </td>
            <td>
                <a asp-controller="Category" asp-action="Details" asp-route-name="@post.Category.Name">
                    @Html.DisplayFor(modelItem => post.Category.Name)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => post.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => post.UpdatedAt)
            </td>
            <td>
                <a asp-action="Details" asp-controller="Posts" asp-route-id="@post.Id" class="btn btn-sm btn-success">Details</a>
            </td>
        </tr>
    }
    </tbody>
</table>

@{
    var currentPage = (int) ViewData["CurrentPageParm"];

    bool hasPreviousPage = currentPage > 1;
    bool hasNextPage = currentPage < (int) ViewData["totalPages"];

    string prevDisabled = !hasPreviousPage ? "disabled" : "";
    string nextDisabled = !hasNextPage ? "disabled" : "";
}

<a asp-action="NewsFeed"
   asp-route-page="@(currentPage - 1)"
   asp-route-title="@ViewData["PostTitleParm"]"
   asp-route-sortBy="@ViewData["SortByParm"]"
   asp-route-dir="@ViewData["OrderByDirParm"]"
   class="btn btn-default @prevDisabled">
    Prev Page
</a>
<a asp-action="NewsFeed"
   asp-route-page="@(currentPage + 1)"
   asp-route-title="@ViewData["PostTitleParm"]"
   asp-route-sortBy="@ViewData["SortByParm"]"
   asp-route-dir="@ViewData["OrderByDirParm"]"
   class="btn btn-default @nextDisabled">
    Next Page
</a>